geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_Z"], mapping = aes(x = window, y = mean_indel_length))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_Z"], mapping = aes(x = window, y = no_spns))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_Z"], mapping = aes(x = window, y = no_snps))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_Z"], mapping = aes(x = window, y = mean_indel_length))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_Z"], mapping = aes(x = window, y = transitions))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_Z"], mapping = aes(x = window, y = transversions))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_Z"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_2"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_3"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_4"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_5"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_6"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_7"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_8"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_9"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_10"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test[ID == "SUPER_11"], mapping = aes(x = window, y = snp_density))+
geom_line()+
geom_smooth()
ggplot(data = test, mapping = aes(x = window, y = snp_density))+
facet_grid(~ID)
ggplot(data = test, mapping = aes(x = window, y = snp_density))+
facet_grid(~ID) +
geom_line()+
geom_smooth()
ggplot(data = test, mapping = aes(x = window, y = snp_density))+
facet_wrap(~ID) +
geom_line()+
geom_smooth()
ggplot(data = test, mapping = aes(x = window, y = snp_density))+
facet_wrap(~ID, scales = "free_x") +
geom_line()+
geom_smooth()
test
ggplot(data = test, mapping = aes(x = window, y = mean_indel_length))+
facet_wrap(~ID, scales = "free_x") +
geom_line()+
geom_smooth()
test
test <- fread("./Documents/haplotype_windows_rust/hw_out/ilAglIoxx1_snp_type.csv")
library(data.table)
library(ggplot2)
test <- fread("./Documents/haplotype_windows_rust/hw_out/ilAglIoxx1_snp_type.csv")
test
test[, .(sum = sum(no_snps)), by = .(ID)]
test[, .(max(window)), by = .(Id)]
test[, .(max(window)), by = .(ID)]
test[, .(sum = sum(no_snps)/max(window)), by = .(ID)]
83520/15500000
80828/14820000
library(data.table)
cdb <- load("Downloads/Chrom_num.rda")
cdb
chrom_num
setDT(chrom_num)
chrom_num
fwrite(x = chrom_num, file = "~/Documents/", sep = ",")
fwrite(x = chrom_num, file = "~/Documents/chrom_num.csv", sep = ",")
# Max Brown
library(data.table)
library(lme4)
install.packages("lme4")
install.packages("MCMCglmm")
library(MCMCglmm)
library(lme4)
data <- fread("~/Documents/sanger_notes/Lepidoptera_Chromosome_Evolution/All_ancestral_chrs.csv")
data
# plot lengths to check normality
hist(data$length)
# plot lengths to check normality
hist(data$Length_R)
# plot lengths to check normality
hist(data$Length_R, breaks = 100)
# plot lengths to check normality
hist(data$Length_R, breaks = 80)
# plot lengths to check normality
hist(data$Length_R, breaks = 50)
str(data)
data[,.(.N), by = .(status)]
data[,.(.N), by = .(Status)]
names_factors <- c("Merion", "Spp", "Phylo")
for (col in names_factors) set(data, j=col, value=as.factor(data[[col]]))
str(data)
# basic model
mod1 <- lm(Length_R ~ Average_GC + Average_SNPs + Average_Reps + Average_Kmer + Merion + Spp, data = data)
# basic model
mod1 <- lm(Length_R ~ Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Merion + Spp, data = data)
anova(mod1)
summary(mod1)
str(data$Merion)
str(data$Merion)$levels
str(str(data$Merion))
str(data$Merion)
pairs(data)
?pairs
pairs(data[1:4])
data
pairs(data[6:11])
pairs(data[6:10])
pairs(data[7:*])
pairs(data[7:8])
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer, data = data)
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size, data = data)
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,  data = data, upper_panel = NULL)
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,  data = data, upper_panel = FALSE)
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,  data = data, row1attop =TRUE)
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,  data = data, row1attop = FALSE)
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,  data = data, row1attop = FALSE, diag.panel = panel.hist)
rect(breaks[-nB], 0, breaks[-1], y, col = "orange", ...)
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "orange", ...)
}
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,  data = data, row1attop = FALSE, diag.panel = panel.hist)
panel.hist <- function(x, ...) {
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks) + 10
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "orange", ...)
}
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,
data = data,
row1attop = FALSE,
diag.panel = panel.hist)
breaks <- h$breaks; nB <- length(breaks)
panel.hist <- function(x, ...) {
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "orange", ...)
}
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,
data = data,
row1attop = FALSE,
diag.panel = panel.hist)
panel.hist <- function(x, ...) {
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks + 10; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "orange", ...)
}
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,
data = data,
row1attop = FALSE,
diag.panel = panel.hist)
panel.hist <- function(x, ...) {
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE, breaks = 30)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "orange", ...)
}
pairs(~ Length_R + Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Genome_size,
data = data,
row1attop = FALSE,
diag.panel = panel.hist)
data
data$Merion
levels(data$Merion)
order(levels(data$Merion))
reorder(levels(data$Merion))
order(levels(data$Merion))
order(levels(as.numeric(data$Merion)))
as.numeric(data$Merion)
order(levels(as.factor(as.numeric(data$Merion))))
data$Merion[order(levels(as.factor(as.numeric(data$Merion))))]
levels(as.factor(as.numeric(data$Merion)))
paste("M", levels(as.factor(as.numeric(data$Merion))))
paste0("M", levels(as.factor(as.numeric(data$Merion))))
data$Merion[paste0("M", levels(as.factor(as.numeric(data$Merion))))]
data
# reorder merion units
data$Merion <- factor(x = data$Merion, levels = paste0("M", levels(as.factor(as.numeric(data$Merion)))))
data
fread("~/Documents/sanger_notes/Lepidoptera_Chromosome_Evolution/All_ancestral_chrs.csv")
levels(as.factor(as.numeric(data$Merion)))
paste0("M", levels(as.factor(as.numeric(data$Merion)
paste0("M", levels(as.factor(as.numeric(data$Merion))
paste0("M", levels(as.factor(as.numeric(data$Merion))
paste0("M", levels(as.factor(as.numeric(data$Merion)))
paste0("M", levels(as.factor(as.numeric(data$Merion)))
paste0("M", levels(as.factor(as.numeric(data$Merion))))
paste0("M", levels(as.factor(as.numeric(data$Merion))))
mod2 <- lmer(Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Merion + Spp + (1 | Merion) + (1 | Spp), data = data)
mod2 <- lmer(Length_R ~ Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Merion + Spp + (1 | Merion) + (1 | Spp), data = data)
mod2
summary(mod2)
mod2 <- lmer(Length_R ~ Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + (1 | Merion) + (1 | Spp), data = data)
summary(mod2)
data
data$Length_R
# rescale chromosome length
(data$Length_R-min(data$Length_R))/(max(data$Length_R)-min(data$Length_R))
# rescale chromosome length
data$Rescaled_Length_R <- (data$Length_R-min(data$Length_R))/(max(data$Length_R)-min(data$Length_R))
# basic model
mod1 <- lm(Rescaled_Length_R ~ Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + Merion + Spp, data = data)
summary(mod1)
mod2 <- lmer(Rescaled_Length_R ~ Average_GC + Average_SNPs + Average_Reps + Avg_Kmer + (1 | Merion) + (1 | Spp), data = data)
summary(mod2)
data
library(data.table)
data <- fread("~/Documents/DToL-Plant-Working-Group/data/DToL_plants/DTOL bryophyte genome sizes.csv")
c_bry <- fread("~/Documents/DToL-Plant-Working-Group/data/DToL_plants/DTOL bryophyte genome sizes.csv")
c_vas <- fread("~/Documents/DToL-Plant-Working-Group/data/DToL_plants/DTOL Genome Size Estimates.csv")
c_bry
data <- fread("~/Documents/DToL-Plant-Working-Group/data/DToL_plant_collections.csv")
data
names(c_bry)
data
c_bry[,.(taxon_name = paste(Genus, Species))]
c_bry[,.(taxon_name = paste(Genus, Species), 2C = `GS (2C)`)]
c_bry[,.(taxon_name = paste(Genus, Species), 2C = "GS (2C)")]
c_bry[,.(taxon_name = paste(Genus, Species), 2C = 'GS (2C)')]
c_bry[,.(taxon_name = paste(Genus, Species), `2C`)]
c_bry[,.(taxon_name = paste(Genus, Species), `GS (2C)`)]
c_bry[,.(taxon_name = paste(Genus, Species), 2C = `GS (2C)`)]
c_bry[,.(taxon_name = paste(Genus, Species), XX = `GS (2C)`)]
c_bry[,.(taxon_name = paste(Genus, Species), 2C = `GS (2C)`)]
c_bry[,.(taxon_name = paste(Genus, Species), GS_2C = `GS (2C)`)]
c_bry[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`)]
c_bry[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`,
GS_gb = `GS (gb)`)]
c_bry[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`,
GS_gb = `GS (gb)`)][taxon_name != NA]
c_bry[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`,
GS_gb = `GS (gb)`)][taxon_name != ""]
c_vas[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`,
GS_gb = `GS (gb)`)]
c_vas
c_bry
c_vas[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C) pg`,
GS_1C = `GS (1C) pg`,
GS_gb = `GS (Gbp/1C)`)]
c_vas2 <- [,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C) pg`,
GS_1C = `GS (1C) pg`,
GS_gb = `GS (Gbp/1C)`)]
c_bry2 <- c_bry[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`,
GS_gb = `GS (gb)`)]
c_vas2 <- c_vas[,.(taxon_name = paste(Genus, Species),
GS_2C = `GS (2C) pg`,
GS_1C = `GS (1C) pg`,
GS_gb = `GS (Gbp/1C)`)]
data[c_bry2, on = .(taxon_name)]
c_bry2[data, on = .(taxon_name)]
data
data
add_families_orders <- function(data, species) {
data[, genus := gsub(pattern = " .*", replacement = "", taxon_name)]
lookup_tab <- setDT(taxonlookup::lookup_table(species))
lookup_tab[data, on = .(genus)]
}
centoids
manual_centoids
data
# create the county from the data
data[, county := gsub(pattern = ", .*", replacement = "", x =  collection_location)]
data
res
res2
res2 <- add_families_orders(res, res$taxon_name)
res2
# some manual curation - Pulvigera = moss, Apopellia = moss
res2[genus == "Pulvigera", group := "Bryophytes"]
res2[genus == "Apopellia", group := "Bryophytes"]
res2
res2[group == "Bryophytes"]
c_bry2
c_bry2[GS_2C != NA]
c_bry2[GS_2C !=- NA]
c_bry2[GS_2C !== NA]
c_bry2[GS_2C !== NA,]
c_bry2[GS_2C != NA,]
c_bry2[GS_2C == NA]
table(c_bry2$GS_2C)
c_bry2[complete.cases(c_bry2)]
res2[group == "Bryophytes"]
data
c_bry2
c_bry
res2[group == "Bryophytes"]
res2[group == "Bryophytes"]$id
c_bry
c_bry$`ID Number`
res2[group == "Bryophytes"]$collector_number
c_vas$`ID Number`
c_vas$`Collector ID`
res2[group == "Bryophytes"]$collector_number
res2[group == "Vascular"]$collector_number
res2
res2[group == "Angiosperms"]$collector_number
res2
c_bry
res2
c_bry$`ID Number`
res2[group == "Bryophytes"]$collector_number
c_bry$`ID Number`
res2[group == "Angiosperms"]$collector_number
c_vas$`Collector ID`
c_vas
res2
res2[grepl(pattern = "Euphorbia", x = Genus)]
res2[grepl(pattern = "Euphorbia", x = taxon_name)]
v_cas[grepl(pattern = "Euphorbia", x = taxon_name)]
c_vas[grepl(pattern = "Euphorbia", x = taxon_name)]
c_vas[grepl(pattern = "Euphorbia", x = Genus)]
c_bry$`ID Number`
res2[group == "Bryophytes"]$collector_number
res2
res2[grepl("EDTOL", collector_number)]
c_bry
c_bry[grepl("fallax", Species)]
res2[group == "Bryophytes"]$collector_number
c_bry$`ID Number`
gsub(pattern = "[a-Z]+", replacement = "", x = c_bry$`ID Number`)
gsub(pattern = "[A-Z]+", replacement = "", x = c_bry$`ID Number`)
gsub(pattern = "[[:alpha:]]+", replacement = "", x = c_bry$`ID Number`)
c_bry
data
c_bry2 <- c_bry[,.(taxon_name = paste(Genus, Species),
collector_number = gsub(pattern = "[[:alpha:]]+", replacement = "", x = `ID Number`),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`,
GS_gb = `GS (gb)`)]
c_bry2
res2[group == "Angiosperms"]$collector_number
c_vas$`Collector ID`
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`), yes = gsub("ZAG", "", c_vas$`Collector ID`), no = gsub("([[:alnum:]]+)", "\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`), yes = gsub("ZAG", "", c_vas$`Collector ID`), no = gsub("([[:alnum:]]+)", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`), yes = gsub("ZAG", "", c_vas$`Collector ID`), no = gsub("?([[:alnum:]]+)", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`), yes = gsub("ZAG", "", c_vas$`Collector ID`), no = gsub("([[:alnum:]]+)", "1 " c_vas$`Collector ID`))
traceback()
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`),
yes = gsub("ZAG", "", c_vas$`Collector ID`, fixed = TRUE),
no = gsub("([[:alnum:]]+)", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`),
yes = gsub("ZAG", "", c_vas$`Collector ID`, fixed = TRUE),
no = gsub("([[:alnum:]]+)", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub("ZAG", "", c_vas$`Collector ID`, fixed = TRUE),
no = gsub("([[:alnum:]]+)", "\\1 " c_vas$`Collector ID`))
c_vas$`Collector ID`
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "([[:alnum:]]+)", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "([[:alnum:]]+)", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "[[:alnum:]]+", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "[[:alnum:]]", "\\1 " c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "([[:alnum:]]+)", replacement = "\\1 ", x = c_vas$`Collector ID`))
ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "([[:alpha:]]+)", replacement = "\\1 ", x = c_vas$`Collector ID`))
c_vas2 <- c_vas[,.(taxon_name = paste(Genus, Species),
collector_number = ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "([[:alpha:]]+)", replacement = "\\1 ", x = c_vas$`Collector ID`))
GS_2C = `GS (2C) pg`,
GS_1C = `GS (1C) pg`,
GS_gb = `GS (Gbp/1C)`)]
c_vas2 <- c_vas[,.(taxon_name = paste(Genus, Species),
collector_number = ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "([[:alpha:]]+)", replacement = "\\1 ", x = c_vas$`Collector ID`)),
GS_2C = `GS (2C) pg`,
GS_1C = `GS (1C) pg`,
GS_gb = `GS (Gbp/1C)`)]
c_vas2
data
data[taxon_name =="Euphorbia lathyris"]
c_vas2[taxon_name == "Euphorbia lathyris"]
c_vas2[taxon_name == "Euphorbia lathyris", collector_number := "MC 9003"]
c_vas2[taxon_name == "Euphorbia lathyris"
]
c_bry <- fread("~/Documents/DToL-Plant-Working-Group/data/DToL_plants/DTOL bryophyte genome sizes.csv")
c_vas <- fread("~/Documents/DToL-Plant-Working-Group/data/DToL_plants/DTOL Genome Size Estimates.csv")
data <- fread("~/Documents/DToL-Plant-Working-Group/data/DToL_plant_collections.csv")
c_bry2 <- c_bry[,.(taxon_name = paste(Genus, Species),
collector_number = gsub(pattern = "[[:alpha:]]+", replacement = "", x = `ID Number`),
GS_2C = `GS (2C)`,
GS_1C = `GS (1C)`,
GS_gb = `GS (gb)`)]
c_vas2 <- c_vas[,.(taxon_name = paste(Genus, Species),
collector_number = ifelse(test = grepl(pattern = "ZAG", x = c_vas$`Collector ID`, fixed = TRUE),
yes = gsub(pattern = "ZAG", replacement = "", x = c_vas$`Collector ID`, fixed = TRUE),
no = gsub(pattern = "([[:alpha:]]+)", replacement = "\\1 ", x = c_vas$`Collector ID`)),
GS_2C = `GS (2C) pg`,
GS_1C = `GS (1C) pg`,
GS_gb = `GS (Gbp/1C)`)]
c_vas2[taxon_name == "Euphorbia lathyris", collector_number := "MC 9003"]
c_bry2[data, on = .(taxon_name)]
c_vas2[data, on = .(taxon_name)]
c_bry2[data, on = .(collector_number)]
c_vas2[data, on = .(collector_number)]
c_vas2
c_vas2[data, on = .(collector_number)]
c_bry2[data, on = .(collector_number, taxon_name)]
c_vas2[data, on = .(collector_number, taxon_name)]
c_vas2[taxon_name == "Euphrasia foulaensis"]
c_vas2[grepl("Euphrasia", taxon_name)]
merge_gs1 <- c_bry2[data, on = .(collector_number, taxon_name)]
merge_gs2 <- c_vas2[merge_gs1, on = .(collector_number, taxon_name)]
merge_gs2
c_bry2
c_vas2
rbind(c_bry2, c_vas2)
genome_sizes <- rbind(c_bry2, c_vas2)
genome_sizes[taxon_name == "Euphorbia lathyris", collector_number := "MC 9003"]
merge_gs1 <- genome_sizes[data, on = .(collector_number, taxon_name)]
merge_gs<- genome_sizes[data, on = .(collector_number, taxon_name)]
rm(merge_gs1)
rm(merge_gs2)
merge_gs
merge_gs[1:100]
?ape::drop.tip
??ape::drop.tip
??ape
??drop.tip
data
# read in data
data <- fread("~/Documents/sanger_notes/Lepidoptera_Chromosome_Evolution/All_ancestral_chrs.csv")
# change relevant columns to factors
names_factors <- c("Merion", "Spp", "Phylo")
for (col in names_factors) set(data, j=col, value=as.factor(data[[col]]))
summary(data$Genome_size)
setwd("./Documents/DToL-Plant-Working-Group/")
data <- fread("./data/DToL_plant_collections_COPO.csv")
library(data.table)
data <- fread("./data/DToL_plant_collections_COPO.csv")
data
unique(data)
unique(data)$taxon_name
unique(data).
unique(data)
data$collector_number <- NULL
unique(data)
